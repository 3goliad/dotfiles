#!/usr/bin/env python3

import argparse
import re
import subprocess
import sys

schema = "org.gnome.desktop.interface"
key = "color-scheme"


def get_mode():
    cmd = ["gsettings", "get", schema, key]
    process = subprocess.run(cmd, capture_output=True)
    if process.returncode != 0:
        print(f"ERROR: failed to run command: {cmd}", file=sys.stderr)
        print(f"STDOUT:\n{process.stdout}", file=sys.stderr)
        print(f"STDERR:\n{process.stderr}", file=sys.stderr)
        print(process.stdout)
        raise Exception("failed to get mode")
    output = str(process.stdout, errors="strict").strip()
    return re.sub("""(^['"]|['"]$)""", "", output)


def set_mode(mode):
    cmd = ["gsettings", "set", schema, key, mode]
    process = subprocess.run(cmd, capture_output=True)
    if process.returncode != 0:
        print(f"ERROR: failed to run command: {cmd}", file=sys.stderr)
        print(f"STDOUT:\n{process.stdout}", file=sys.stderr)
        print(f"STDERR:\n{process.stderr}", file=sys.stderr)
        print(process.stdout)
        raise Exception("failed to set mode")
    output = str(process.stdout, errors="strict").strip()
    print(output)


def toggle_mode():
    current = get_mode()
    if current == "prefer-light":
        set_mode("prefer-dark")
    else:
        set_mode("prefer-light")


def display_mode():
    current = get_mode()
    print(f"color-scheme: {current}")


parser = argparse.ArgumentParser(prog="gnome-light-dark-mode")
parser.add_argument("-t", "--toggle", action="store_true")
args = parser.parse_args()
if vars(args)["toggle"]:
    toggle_mode()
else:
    display_mode()
